<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.nwpu.i_gua_da.mapper.ReserveMapper">
    <resultMap id="Reserve" type="org.nwpu.i_gua_da.entity.Reserve">
        <id property="reserveId" column="reserve_id"/>
        <result property="reserveTime" column="reserve_time"/>
        <result property="status" column="status"/>
        <association property="user" javaType="org.nwpu.i_gua_da.entity.User">
            <id property="userId" column="user_id"/>
            <result property="name" column="name"/>
        </association>
        <association property="schedule" javaType="org.nwpu.i_gua_da.entity.Schedule">
            <id property="scheduleId" column="schedule_id"/>
            <result property="departureTime" column="departure_time"/>
            <result property="totalSeat" column="total_seat"/>
            <association property="startStation" javaType="org.nwpu.i_gua_da.entity.Station">
                <id property="stationId" column="start_station_id"/>
                <result property="stationName" column="start_station_name"/>
            </association>
            <association property="endStation" javaType="org.nwpu.i_gua_da.entity.Station">
                <id property="stationId" column="end_station_id"/>
                <result property="stationName" column="end_station_name"/>
            </association>
        </association>
    </resultMap>

    <insert id="insertReserve" parameterType="org.nwpu.i_gua_da.entity.Reserve">
        INSERT INTO reserve_info (user_id, schedule_id, reserve_time, status) values (#{user.userId}, #{schedule.scheduleId}, #{reserveTime}, #{status})
    </insert>

    <select id="listReservesByUserIdBetweenTimes" resultMap="Reserve">
        select * from (select r.reserve_id, r.schedule_id, r.reserve_time, r.`status`, u.user_id, u.`name` from reserve_info r left join user_info u on r.user_id = u.user_id
                       where r.user_id = #{userId} and r.reserve_time between #{startDateTime} and #{endDateTime}) r left join
                      (
                          select s.schedule_id, s.departure_time, s.total_seat, s.start_station_id, s.end_station_id, s.start_station_name, `end`.station_name as end_station_name
                          from (select
                                    s.schedule_id, s.departure_time, s.total_seat, s.last_seat, s.start_station_id, s.end_station_id, `start`.station_name as start_station_name
                                from bus_schedule s left join station_info `start` on s.start_station_id = `start`.station_id)
                                   s left join station_info `end` on s.end_station_id = `end`.station_id
                      ) s on r.schedule_id = s.schedule_id and r.status order by r.reserve_time DESC
    </select>

    <select id="listOnlyReservesByUserId" resultMap="Reserve">
        select reserve_id, reserve_time, status, user_id, schedule_id from reserve_info where user_id = #{userId}
    </select>

    <update id="setStatusByUserIdAndScheduleId">
        UPDATE reserve_info SET status=#{status} where user_id=#{userId} and schedule_id=#{scheduleId}
    </update>

    <select id="selectReserveByReserveId" resultMap="Reserve">
        select * from (select r.reserve_id, r.schedule_id, r.reserve_time, r.`status`, u.user_id, u.`name` from reserve_info r left join user_info u on r.user_id = u.user_id
                       where r.reserve_id = #{reserveId}) r left join
                      (
                          select s.schedule_id, s.departure_time, s.total_seat, s.start_station_id, s.end_station_id, s.start_station_name, `end`.station_name as end_station_name
                          from (select
                                    s.schedule_id, s.departure_time, s.total_seat, s.last_seat, s.start_station_id, s.end_station_id, `start`.station_name as start_station_name
                                from bus_schedule s left join station_info `start` on s.start_station_id = `start`.station_id)
                                   s left join station_info `end` on s.end_station_id = `end`.station_id
                      ) s on r.schedule_id = s.schedule_id
    </select>

    <update id="setStatusByReserveId">
        UPDATE reserve_info SET status=#{status} where reserve_id = #{reserveId}
    </update>

    <select id="verifyReserveByScheduleIdAndUserId" resultType="Integer">
        SELECT reserve_id from reserve_info where schedule_id = #{scheduleId} and user_id = #{userId} limit 1
    </select>
</mapper>